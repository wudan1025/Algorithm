/*
 * @LastEditors: wudan01
 * @description: 文件描述
 */
/*
三数组求和
真题描述：给你一个包含 n 个整数的数组 nums，
判断 nums 中是否存在三个元素 a，b，c ，
使得 a + b + c = 0 ？请你找出所有满足条件且不重复的三元组。

注意：答案中不可以包含重复的三元组。

示例：

给定数组 nums = [-1, 0, 1, 2, -1, -4]， 满足要求的三元组集合为： [ [-1, 0, 1], [-1, -1, 2] ]
*/

// 方法1
// 排序
var nums = [-1, 0, 1, 2, -1, -4];
nums.sort((a, b) => a - b);
// console.log(nums);

/*
important;
双指针法的使用场景了，一方面，它可以做到空间换时间；另一方面，它也可以帮我们降低问题的复杂度。
双指针法用在涉及求和、比大小类的数组题目里时，大前提往往是：
该数组必须有序。否则双指针根本无法帮助我们缩小定位的范围
*/
